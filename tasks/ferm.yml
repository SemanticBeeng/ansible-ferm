---
- name: Ensure ferm is installed
  apt:
    name: '{{ ferm_packages }}'
    state: 'present'
    install_recommends: 'no'

# Skipping linter since it complains when modes does not start with 0
- name: Create configuration directories
  file:
    path: '{{ item }}'
    state: directory
    owner: root
    group: adm
    mode: 2750
  with_items:
    - '/etc/ferm/ferm.d'
    - '/etc/ferm/incl.d'
    - '/etc/ferm/filter-input.d'
  tags:
  - skip_ansible_lint

- name: Configure ferm default variables
  template:
    src: 'ferm.j2'
    dest: '/etc/default/ferm'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart ferm' ]

- name: Configure main ferm config file
  template:
    src: 'ferm.conf.j2'
    dest: '/etc/ferm/ferm.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  notify: [ 'Restart ferm' ]

- name: Allow SSH access
  template:
    src: 'input.d/001_sshd.conf.j2'
    dest: '/etc/ferm/filter-input.d/001_sshd.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  notify: [ 'Restart ferm' ]

- name: Allow DNS resolution
  template:
    src: 'input.d/002_dns.conf.j2'
    dest: '/etc/ferm/filter-input.d/002_dns.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  notify: [ 'Restart ferm' ]

#- name: Copying default FW rules
#  template:
#    src:  'ferm_rules/ipv4/999_default_fw.conf'
#    dest: '/etc/ferm/ferm.d/999_default_fw.conf'
#    owner: root
#    group: root
#  tags:
#     always

- name: Configure black and white listing
  template:
    src: 'bw_list.conf.j2'
    dest: '/etc/ferm/incl.d/bw_list.conf'
    owner: 'root'
    group: 'adm'
    mode: '0644'
  notify: [ 'Restart ferm' ]

#- name: Configure forwarding in ip(6)tables if enabled
#  template:
#    src: '10_forward.conf.nu.j2'
#    dest: '/etc/ferm/ferm.d/10_forward.conf'
#    owner: 'root'
#    group: 'adm'
#    mode: '0644'
#  notify: [ 'Restart ferm' ]
#
#- name: Remove ip(6)tables rules if requested
#  file:
#    path: '/etc/ferm/ferm.d/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
#    state: 'absent'
#  with_flattened:
#    - "{{ ferm_rules }}"
#    - "{{ ferm_group_rules }}"
#    - "{{ ferm_host_rules }}"
#    - "{{ ferm_dependent_rules }}"
#  when: ((item.type is defined and item.type) and
#         (item.delete is defined and item.delete | bool))
#
#- name: Configure ip(6)tables rules
#  template:
#    src: 'input.d/{{ item.type }}.conf.j2'
#    dest: '/etc/ferm/ferm.d/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
#    owner: 'root'
#    group: 'adm'
#    mode: '0644'
#  with_flattened:
#    - "{{ ferm_rules }}"
#    - "{{ ferm_group_rules }}"
#    - "{{ ferm_host_rules }}"
#    - "{{ ferm_dependent_rules }}"
#  when: ((item.type is defined and item.type) and
#         (item.delete is undefined or not item.delete | bool))

#- name: Remove iptables INPUT rules if requested
#  file:
#    path: '/etc/ferm/filter-input.d/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
#    state: 'absent'
#  with_flattened:
#    - "{{ ferm_input_list }}"
#    - "{{ ferm_input_group_list }}"
#    - "{{ ferm_input_host_list }}"
#    - "{{ ferm_input_dependent_list }}"
#  when: ((item.type is defined and item.type) and
#         (item.delete is defined and item.delete | bool))
#
#- name: Configure iptables INPUT rules
#  template:
#    src: 'input.d/{{ item.type }}.conf.j2'
#    dest: '/etc/ferm/filter-input.d/{{ item.weight | default("50") }}_{{ item.filename | default(item.type + "_" + item.name | default((item.dport[0] if item.dport|d() else "rules"))) }}.conf'
#    owner: 'root'
#    group: 'adm'
#    mode: '0644'
#  with_flattened:
#    - "{{ ferm_input_list }}"
#    - "{{ ferm_input_group_list }}"
#    - "{{ ferm_input_host_list }}"
#    - "{{ ferm_input_dependent_list }}"
#  when: ((item.type is defined and item.type) and
#         (item.delete is undefined or not item.delete | bool))

- name: Apply iptables rules if ferm is enabled
  command: ferm --slow --def '$intf_main=eno2' --def '$ipv4_address={{ansible_default_ipv4.address}}'  /etc/ferm/ferm.conf
 #command: ferm --slow --def '$ipv4_address=172.17.0.2'                       --def '$intf_main=eth0' /etc/ferm/ferm.conf
  changed_when: False
  when: ferm_enabled

- name: Clear iptables rules if ferm is disabled
  command: ferm --flush /etc/ferm/ferm.conf
  changed_when: False
  when: not ferm_enabled

- name: Configure sysctl
  template:
    src: '30-ferm.conf.j2'
    dest: '/etc/sysctl.d/30-ferm.conf'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Reload sysctl' ]

- name: Ensure that /etc/network/if-pre-up.d exists
  file:
    path: '/etc/network/if-pre-up.d'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'

- name: Configure forwarding in ifupdown if enabled
  template:
    src: 'ferm-forward.j2'
    dest: '/etc/network/if-pre-up.d/ferm-forward'
    owner: 'root'
    group: 'root'
    mode: '0755'

